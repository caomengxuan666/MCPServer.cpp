name: Package

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]

jobs:
  package:
    name: Package for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake rpm

      - name: Install NSIS (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install nsis

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: |
          cmake --build build --config Release

      - name: Package
        run: |
          cd build
          cpack

      - name: List generated packages
        run: |
          ls -la build/
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mcp-server++-${{ matrix.os }}
          path: |
            build/*.tar.gz
            build/*.zip
            build/*.deb
            build/*.rpm
            build/*.exe

  release:
    name: Create Release
    needs: package
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-20.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mcp-server++-ubuntu-20.04/*.tar.gz
            mcp-server++-ubuntu-20.04/*.zip
            mcp-server++-ubuntu-20.04/*.deb
            mcp-server++-ubuntu-20.04/*.rpm
            mcp-server++-windows/*.exe
            mcp-server++-windows/*.zip
            mcp-server++-windows/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
